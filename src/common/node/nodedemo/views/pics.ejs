<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
    <title>小小相册</title>

    <!-- Bootstrap -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* .thumbnail {
            width: 400px;
            height: 400px;
            overflow: hidden;
        } */

        .thumbnail h3 {
            text-align: center
        }

        .thumbnail p {
            text-align: right
        }

        .thumbnail img {
            width: 200px;
            height: 200px;
            background-size: contain
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"
                    aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">小小相册</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li>
                        <a href="/">全部相册
                            <span class="sr-only">(current)</span>
                        </a>
                    </li>
                    <li>
                        <a href="/upload">上传</a>
                    </li>
                    <li>
                        <a href="/recycleBin">回收站</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">
        <ol class="breadcrumb">
            <li>
                <a href="/">全部相册</a>
            </li>
            <li class="active">
                <%= albumsNames%>
            </li>
        </ol>
    </div>
    <div class="container">
        <div class="row">
            <% for(var i = 0 ;i< pics.length;i++){%>
                <div class="col-sm-6 col-md-4">
                    <div class="thumbnail">
                        <img src="<%= pics[i]%>" alt="...">
                        <div class="caption">
                            <h3>
                                <%= pics[i]%>
                            </h3>
                            <p>
                                <a id="btn" data-id="<%= pics[i]%>" class="btn btn-default" role="button" onclick="deleteImg(event,this)">Delete</a>
                            </p>
                        </div>
                    </div>
                </div>
                <%}%>
        </div>
    </div>
    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->
    <script src="https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js"></script>
    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->
    <script src="/js/bootstrap.min.js"></script>

    <script>
        function deleteImg(e, that) {
            var getDataId = that.getAttribute('data-id');
            // var doIt = getDataId.split("_");
            // var folderName = doIt[0];
            // var fileName = doIt[1];
            ajax_method('/move/post', getDataId, 'POST', function (res) {
                if (res) {
                    document.location.reload();
                }
            })
        }

        function ajax_method(url, data, method, success) {
            // 异步对象
            var ajax = new XMLHttpRequest();
            // get 跟post  需要分别写不同的代码
            if (method == 'get') {
                // get请求
                if (data) {
                    // 如果有值
                    url += '?';
                    url += data;
                } else {
                    return
                }
                // 设置 方法 以及 url
                ajax.open(method, url);

                // send即可
                ajax.send();
            } else {
                // post请求
                // post请求 url 是不需要改变
                ajax.open(method, url);

                // 需要设置请求报文
                ajax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

                // 判断data send发送数据
                if (data) {
                    // 如果有值 从send发送
                    ajax.send(data);
                } else {
                    // 木有值 直接发送即可
                    return
                    // ajax.send();
                }
            }
            // 注册事件
            ajax.onreadystatechange = function () {
                // 在事件中 获取数据 并修改界面显示
                if (ajax.readyState == 4 && ajax.status == 200) {

                    // 将 数据 让 外面可以使用
                    // return ajax.responseText;

                    // 当 onreadystatechange 调用时 说明 数据回来了
                    // ajax.responseText;

                    // 如果说 外面可以传入一个 function 作为参数 success
                    success(ajax.responseText);
                }
            }

        }
        window.onload = function () {
            var btnDom = document.getElementById("btn");
            // btnDom.onclick =(e)=> {
            //     console.log(e)
            //     console.log(btnDom.getAttribute("data-id"))
            // }

        }
    </script>
</body>

</html>